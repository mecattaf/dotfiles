[Unit]
Description=PostgreSQL database for LiteLLM
After=network-online.target {{ .infrastructure.network.name }}.network.service
Requires={{ .infrastructure.network.name }}.network.service

[Container]
Image={{ .infrastructure.services.litellm_postgres.image }}
AutoUpdate=registry
ContainerName={{ .infrastructure.services.litellm_postgres.container_name }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK - Internal only, no published ports
# ═════════════════════════════════════════════════════════════════════════════
Network={{ .infrastructure.network.name }}.network

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 ENVIRONMENT - No password needed (internal only, trust auth)
# ═════════════════════════════════════════════════════════════════════════════
Environment=POSTGRES_DB={{ .infrastructure.services.litellm_postgres.db_name }}
Environment=POSTGRES_USER={{ .infrastructure.services.litellm_postgres.db_user }}
Environment=POSTGRES_HOST_AUTH_METHOD=trust

# Enable pgvector extension
Exec=-c shared_preload_libraries=vector -c max_connections=200

# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUME
# ═════════════════════════════════════════════════════════════════════════════
Volume={{ .infrastructure.services.litellm_postgres.volume }}:/var/lib/postgresql/data:Z

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
HealthCmd=pg_isready -U {{ .infrastructure.services.litellm_postgres.db_user }}
HealthInterval=30s
HealthTimeout=5s
HealthRetries=5
HealthStartPeriod=10s

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
[Service]
Slice=llm.slice
TimeoutStartSec=900
Restart=on-failure
RestartSec=10

[Install]
# No WantedBy - dependencies via After/Requires
