# ═════════════════════════════════════════════════════════════════════════════
# 🖥️  COCKPIT - System Management Dashboard
# Generated by Chezmoi - DO NOT EDIT MANUALLY
# Location: ~/.config/containers/systemd/cockpit/cockpit.container
#
# Note: Hostname {{ .infrastructure.services.cockpit.hostname }} means this
#       container represents the actual host system in the dashboard
# ═════════════════════════════════════════════════════════════════════════════

[Unit]
Description={{ .infrastructure.services.cockpit.description }}
After=network-online.target {{ .infrastructure.network.name }}.network.service
Requires={{ .infrastructure.network.name }}.network.service
# Ensure podman socket is available for container monitoring
After=podman.socket
Wants=podman.socket

[Container]
Image={{ .infrastructure.services.cockpit.image }}
AutoUpdate=registry
ContainerName={{ .infrastructure.services.cockpit.container_name }}
Hostname={{ .infrastructure.services.cockpit.hostname }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK - Both llm network AND published port
# ═════════════════════════════════════════════════════════════════════════════
Network={{ .infrastructure.network.name }}.network

# Published port for Caddy access
{{- if .infrastructure.services.cockpit.published_port }}
PublishPort={{ .infrastructure.services.cockpit.bind | default "127.0.0.1" }}:{{ .infrastructure.services.cockpit.published_port }}:{{ .infrastructure.services.cockpit.port }}
{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUMES - Full system access
# ═════════════════════════════════════════════════════════════════════════════

# Mount host root for full system visibility
Volume=/:/host:ro

# Podman socket for container management
Volume=/run/user/%U/podman/podman.sock:/run/podman/podman.sock:Z

# Systemd socket for service management (read-only)
Volume=/run/systemd:/run/systemd:ro

# User systemd for user service monitoring
Volume=/run/user/%U/systemd:/run/user/systemd:ro

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 SECURITY & PRIVILEGES
# ═════════════════════════════════════════════════════════════════════════════

# Privileged mode for full system access
PodmanArgs=--privileged

# Use host PID namespace to see all processes
PodmanArgs=--pid=host

# Security label to allow system access
PodmanArgs=--security-opt=label=disable

# ═════════════════════════════════════════════════════════════════════════════
# 🌍 ENVIRONMENT
# ═════════════════════════════════════════════════════════════════════════════

# Cockpit runs as container
Environment=COCKPIT_IN_CONTAINER=true

# Disable authentication (Tailscale provides auth)
Environment=COCKPIT_ALLOW_UNENCRYPTED=true

# Container name for self-identification
Environment=NAME={{ .infrastructure.services.cockpit.container_name }}

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 EXECUTION
# ═════════════════════════════════════════════════════════════════════════════

# Use the container's label-run script (standard Cockpit approach)
Exec=/container/label-run

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
HealthCmd=curl -f http://localhost:{{ .infrastructure.services.cockpit.port }} || exit 1
HealthInterval=30s
HealthTimeout=5s
HealthRetries=3
HealthStartPeriod=15s

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
[Service]
Slice=llm.slice
TimeoutStartSec=300
Restart=always
RestartSec=10

[Install]
WantedBy=default.target
