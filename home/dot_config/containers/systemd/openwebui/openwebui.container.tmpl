[Unit]
Description={{ .infrastructure.services.openwebui.description }}
After=network-online.target {{ .infrastructure.network.name }}.network.service
{{- range .infrastructure.services.openwebui.requires }}
After={{ . }}.service
{{- end }}
{{- if eq .openwebui.providers.web_search_engine "searxng" }}
After=searxng.service
{{- end }}
{{- if eq .openwebui.providers.content_extraction "tika" }}
After=tika.service
{{- else if eq .openwebui.providers.content_extraction "docling" }}
After=docling.service
{{- end }}
{{- if .openwebui.features.code_execution }}
After=jupyter.service
{{- end }}
{{- if eq .openwebui.providers.vector_db "qdrant" }}
After=qdrant.service
{{- end }}
Requires={{ .infrastructure.network.name }}.network.service
{{- range .infrastructure.services.openwebui.requires }}
Wants={{ . }}.service
{{- end }}
{{- if eq .openwebui.providers.web_search_engine "searxng" }}
Wants=searxng.service
{{- end }}
{{- if eq .openwebui.providers.content_extraction "tika" }}
Wants=tika.service
{{- else if eq .openwebui.providers.content_extraction "docling" }}
Wants=docling.service
{{- end }}
{{- if .openwebui.features.code_execution }}
Wants=jupyter.service
{{- end }}
{{- if eq .openwebui.providers.vector_db "qdrant" }}
Wants=qdrant.service
{{- end }}

[Container]
Image={{ .infrastructure.services.openwebui.image }}
AutoUpdate=registry
ContainerName={{ .infrastructure.services.openwebui.container_name }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK
# ═════════════════════════════════════════════════════════════════════════════
Network={{ .infrastructure.network.name }}.network

# ═════════════════════════════════════════════════════════════════════════════
# 📍 PUBLISHED PORT (for Caddy to access)
# ═════════════════════════════════════════════════════════════════════════════
{{- if .infrastructure.services.openwebui.published_port }}
PublishPort={{ .infrastructure.services.openwebui.bind | default "127.0.0.1" }}:{{ .infrastructure.services.openwebui.published_port }}:{{ .infrastructure.services.openwebui.port }}
{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUME
# ═════════════════════════════════════════════════════════════════════════════
Volume={{ .infrastructure.services.openwebui.volume }}:/app/backend/data:Z

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 ENVIRONMENT - Loaded from dedicated env file
# ═════════════════════════════════════════════════════════════════════════════
EnvironmentFile=%h/.config/containers/systemd/openwebui/openwebui.env

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
HealthCmd=wget --no-verbose --tries=1 --spider http://localhost:{{ .infrastructure.services.openwebui.port }}/health || exit 1
HealthInterval=30s
HealthTimeout=5s
HealthRetries=3
HealthStartPeriod=30s

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
[Service]
Slice=llm.slice
TimeoutStartSec={{ .openwebui.service.timeout_start_sec }}
Restart={{ .openwebui.service.restart }}
RestartSec={{ .openwebui.service.restart_sec }}

[Install]
# No WantedBy - dependencies via After/Requires
