{{- /* ═════════════════════════════════════════════════════════════════════════ */ -}}
{{- /* OPENWEBUI ENVIRONMENT - Auto-generated from .chezmoi.yaml.tmpl              */ -}}
{{- /* This file demonstrates the power of feature-centric configuration           */ -}}
{{- /* All 200+ environment variables are generated from 29 decision variables     */ -}}
{{- /* ═════════════════════════════════════════════════════════════════════════ */ -}}

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 CORE CONFIGURATION (Always present)
# ═════════════════════════════════════════════════════════════════════════════

# Database (auto-generated from infrastructure.services)
DATABASE_URL={{ .openwebui.general.database_url }}

# LLM Connection (auto-generated from infrastructure.services)
OPENAI_API_BASE_URL={{ .openwebui.general.openai_api_base_url }}
OPENAI_API_KEY={{ .openwebui.general.openai_api_key }}

# Security
WEBUI_SECRET_KEY={{ .openwebui.general.webui_secret_key }}

# Branding
WEBUI_NAME={{ .openwebui.general.webui_name }}
CUSTOM_NAME={{ .openwebui.general.custom_name }}

# Authentication
WEBUI_AUTH={{ .openwebui.general.webui_auth }}
ENABLE_SIGNUP={{ .openwebui.general.enable_signup }}
DEFAULT_USER_ROLE={{ .openwebui.general.default_user_role }}

# Logging
GLOBAL_LOG_LEVEL={{ .openwebui.general.log_level }}

# Performance
ENABLE_REALTIME_CHAT_SAVE={{ .openwebui.general.enable_realtime_chat_save }}

# ═════════════════════════════════════════════════════════════════════════════
# 📊 VECTOR DATABASE (Decision 17: Which vector DB?)
# ═════════════════════════════════════════════════════════════════════════════

VECTOR_DB={{ .openwebui.providers.vector_db }}

{{- if eq .openwebui.providers.vector_db "chroma" }}
# Chroma (Embedded)
CHROMA_TENANT={{ .openwebui.vector_db_config.chroma.tenant }}
CHROMA_DATABASE={{ .openwebui.vector_db_config.chroma.database }}

{{- else if eq .openwebui.providers.vector_db "pgvector" }}
# PGVector (PostgreSQL extension)
PGVECTOR_DB_URL={{ .openwebui.vector_db_config.pgvector.db_url }}
# Uses main DATABASE_URL - no additional config needed

{{- else if eq .openwebui.providers.vector_db "qdrant" }}
# Qdrant (Dedicated vector DB)
QDRANT_URI={{ .openwebui.vector_db_config.qdrant.uri }}
QDRANT_GRPC_PORT={{ .openwebui.vector_db_config.qdrant.grpc_port }}
QDRANT_PREFER_GRPC={{ .openwebui.vector_db_config.qdrant.prefer_grpc }}
QDRANT_ON_DISK={{ .openwebui.vector_db_config.qdrant.on_disk }}
# Note: No API key needed - Tailscale network provides security

{{- else if eq .openwebui.providers.vector_db "milvus" }}
# Milvus
MILVUS_URI={{ .openwebui.vector_db_config.milvus.uri }}
{{- if .openwebui.vector_db_config.milvus.token }}
MILVUS_TOKEN={{ .openwebui.vector_db_config.milvus.token }}
{{- end }}
MILVUS_INDEX_TYPE={{ .openwebui.vector_db_config.milvus.index_type }}
MILVUS_METRIC_TYPE={{ .openwebui.vector_db_config.milvus.metric_type }}

{{- else if eq .openwebui.providers.vector_db "elasticsearch" }}
# Elasticsearch
ELASTICSEARCH_URL={{ .openwebui.vector_db_config.elasticsearch.url }}
{{- if .openwebui.vector_db_config.elasticsearch.api_key }}
ELASTICSEARCH_API_KEY={{ .openwebui.vector_db_config.elasticsearch.api_key }}
{{- end }}
ELASTICSEARCH_INDEX_PREFIX={{ .openwebui.vector_db_config.elasticsearch.index_prefix }}

{{- else if eq .openwebui.providers.vector_db "opensearch" }}
# OpenSearch
OPENSEARCH_URI={{ .openwebui.vector_db_config.opensearch.uri }}
OPENSEARCH_USERNAME={{ .openwebui.vector_db_config.opensearch.username }}
{{- if .openwebui.vector_db_config.opensearch.password }}
OPENSEARCH_PASSWORD={{ .openwebui.vector_db_config.opensearch.password }}
{{- end }}

{{- else if eq .openwebui.providers.vector_db "pinecone" }}
# Pinecone
PINECONE_API_KEY={{ .openwebui.vector_db_config.pinecone.api_key }}
PINECONE_ENVIRONMENT={{ .openwebui.vector_db_config.pinecone.environment }}
PINECONE_INDEX_NAME={{ .openwebui.vector_db_config.pinecone.index_name }}

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🔍 RAG CONFIGURATION (Decision 1: Enable RAG? + Decision 18: Which embedding?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if .openwebui.features.rag }}
# RAG Enabled
ENABLE_RAG=true

# RAG Embedding Engine
RAG_EMBEDDING_ENGINE={{ .openwebui.providers.rag_embedding }}

{{- if eq .openwebui.providers.rag_embedding "" }}
# Local Embedding Model
RAG_EMBEDDING_MODEL={{ .openwebui.rag_embedding_config.local.model }}
RAG_EMBEDDING_MODEL_DEVICE={{ .openwebui.rag_embedding_config.local.device }}
RAG_EMBEDDING_MODEL_BATCH_SIZE={{ .openwebui.rag_embedding_config.local.batch_size }}

{{- else if eq .openwebui.providers.rag_embedding "ollama" }}
# Ollama Embedding
OLLAMA_BASE_URL={{ .openwebui.rag_embedding_config.ollama.base_url }}
RAG_EMBEDDING_MODEL={{ .openwebui.rag_embedding_config.ollama.model }}

{{- else if eq .openwebui.providers.rag_embedding "openai" }}
# OpenAI Embedding (via LiteLLM)
RAG_OPENAI_API_BASE_URL={{ .openwebui.rag_embedding_config.openai.base_url }}
RAG_OPENAI_API_KEY={{ .openwebui.rag_embedding_config.openai.api_key }}
RAG_EMBEDDING_MODEL={{ .openwebui.rag_embedding_config.openai.model }}

{{- end }}

# RAG Settings
RAG_TOP_K={{ .openwebui.general.rag_top_k }}
CHUNK_SIZE={{ .openwebui.general.chunk_size }}
CHUNK_OVERLAP={{ .openwebui.general.chunk_overlap }}
PDF_EXTRACT_IMAGES={{ .openwebui.general.pdf_extract_images }}
RAG_FILE_MAX_SIZE={{ .openwebui.general.rag_file_max_size }}
RAG_FILE_MAX_COUNT={{ .openwebui.general.rag_file_max_count }}

# Text Splitter (Decision 20)
RAG_TEXT_SPLITTER={{ .openwebui.providers.text_splitter }}

# Advanced RAG Features
ENABLE_RERANKING={{ .openwebui.general.enable_reranking }}
{{- if .openwebui.general.enable_reranking }}
RAG_RERANKING_MODEL={{ .openwebui.general.reranking_model }}
{{- end }}
ENABLE_HYBRID_SEARCH={{ .openwebui.general.enable_hybrid_search }}
ENABLE_QUERY_REWRITING={{ .openwebui.general.enable_query_rewriting }}

{{- else }}
# RAG Disabled
ENABLE_RAG=false

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 📄 CONTENT EXTRACTION (Decision 19: Which doc processor?)
# ═════════════════════════════════════════════════════════════════════════════

CONTENT_EXTRACTION_ENGINE={{ .openwebui.providers.content_extraction }}

{{- if eq .openwebui.providers.content_extraction "tika" }}
# Apache Tika
TIKA_SERVER_URL={{ .openwebui.content_extraction_config.tika.server_url }}

{{- else if eq .openwebui.providers.content_extraction "docling" }}
# Docling
DOCLING_SERVER_URL={{ .openwebui.content_extraction_config.docling.server_url }}
DOCLING_OCR_ENGINE={{ .openwebui.content_extraction_config.docling.ocr_engine }}
DOCLING_OCR_LANG={{ .openwebui.content_extraction_config.docling.ocr_lang }}

{{- else if eq .openwebui.providers.content_extraction "mistral_ocr" }}
# Mistral OCR
MISTRAL_OCR_API_KEY={{ .openwebui.content_extraction_config.mistral_ocr.api_key }}

{{- else if eq .openwebui.providers.content_extraction "external" }}
# External Content Extraction
CONTENT_EXTRACTION_ENGINE_URL={{ .openwebui.content_extraction_config.external.url }}
{{- if .openwebui.content_extraction_config.external.api_key }}
CONTENT_EXTRACTION_ENGINE_API_KEY={{ .openwebui.content_extraction_config.external.api_key }}
{{- end }}

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🔍 WEB SEARCH (Decision 2: Enable? + Decision 21: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if .openwebui.features.web_search }}
# Web Search Enabled
ENABLE_RAG_WEB_SEARCH=true
ENABLE_WEB_SEARCH=true
RAG_WEB_SEARCH_ENGINE={{ .openwebui.providers.web_search_engine }}
WEB_SEARCH_ENGINE={{ .openwebui.providers.web_search_engine }}

{{- if eq .openwebui.providers.web_search_engine "searxng" }}
# SearXNG
SEARXNG_QUERY_URL={{ .openwebui.web_search_config.searxng.query_url }}

{{- else if eq .openwebui.providers.web_search_engine "tavily" }}
# Tavily
TAVILY_API_KEY={{ .openwebui.web_search_config.tavily.api_key }}
RAG_WEB_SEARCH_TAVILY_EXTRACT_DEPTH={{ .openwebui.web_search_config.tavily.extract_depth }}

{{- else if eq .openwebui.providers.web_search_engine "brave" }}
# Brave Search
BRAVE_SEARCH_API_KEY={{ .openwebui.web_search_config.brave.api_key }}

{{- else if eq .openwebui.providers.web_search_engine "google_pse" }}
# Google Programmable Search Engine
GOOGLE_PSE_API_KEY={{ .openwebui.web_search_config.google_pse.api_key }}
GOOGLE_PSE_ENGINE_ID={{ .openwebui.web_search_config.google_pse.engine_id }}

{{- else if eq .openwebui.providers.web_search_engine "duckduckgo" }}
# DuckDuckGo (no config needed)

{{- end }}

# Web Search Settings
ENABLE_SEARCH_QUERY={{ .openwebui.general.enable_search_query }}
ENABLE_RETRIEVAL_QUERY_GENERATION={{ .openwebui.general.enable_retrieval_query_generation }}
RAG_WEB_SEARCH_RESULT_COUNT={{ .openwebui.general.web_search_result_count }}
RAG_WEB_SEARCH_CONCURRENT_REQUESTS={{ .openwebui.general.web_search_concurrent_requests }}

# Web Loader (Decision 22)
RAG_WEB_LOADER={{ .openwebui.providers.web_loader }}

{{- if eq .openwebui.providers.web_loader "playwright" }}
PLAYWRIGHT_WS_URL={{ .openwebui.web_loader_config.playwright.ws_url }}
PLAYWRIGHT_TIMEOUT={{ .openwebui.web_loader_config.playwright.timeout }}
{{- end }}

{{- else }}
# Web Search Disabled
ENABLE_RAG_WEB_SEARCH=false
ENABLE_WEB_SEARCH=false

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🎨 IMAGE GENERATION (Decision 3: Enable? + Decision 23: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if .openwebui.features.image_generation }}
# Image Generation Enabled
ENABLE_IMAGE_GENERATION=true
IMAGE_GENERATION_ENGINE={{ .openwebui.providers.image_engine }}

{{- if eq .openwebui.providers.image_engine "openai" }}
# OpenAI (via LiteLLM)
IMAGE_GENERATION_OPENAI_API_BASE_URL={{ .openwebui.image_generation_config.openai.base_url }}
IMAGE_GENERATION_OPENAI_API_KEY={{ .openwebui.image_generation_config.openai.api_key }}
IMAGE_GENERATION_MODEL={{ .openwebui.image_generation_config.openai.model }}

{{- else if eq .openwebui.providers.image_engine "comfyui" }}
# ComfyUI
COMFYUI_BASE_URL={{ .openwebui.image_generation_config.comfyui.base_url }}
{{- if .openwebui.image_generation_config.comfyui.workflow }}
COMFYUI_WORKFLOW={{ .openwebui.image_generation_config.comfyui.workflow | toJson }}
{{- end }}

{{- else if eq .openwebui.providers.image_engine "automatic1111" }}
# Automatic1111
AUTOMATIC1111_BASE_URL={{ .openwebui.image_generation_config.automatic1111.base_url }}
{{- if .openwebui.image_generation_config.automatic1111.api_auth }}
AUTOMATIC1111_API_AUTH={{ .openwebui.image_generation_config.automatic1111.api_auth }}
{{- end }}

{{- else if eq .openwebui.providers.image_engine "gemini" }}
# Gemini
GEMINI_API_KEY={{ .openwebui.image_generation_config.gemini.api_key }}

{{- end }}

{{- else }}
# Image Generation Disabled
ENABLE_IMAGE_GENERATION=false

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🔊 SPEECH-TO-TEXT (Decision 4: Enable? + Decision 24: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if .openwebui.features.speech_to_text }}
# STT Enabled
AUDIO_STT_ENGINE={{ .openwebui.providers.stt_engine }}

{{- if eq .openwebui.providers.stt_engine "" }}
# Local Whisper
AUDIO_STT_MODEL={{ .openwebui.audio_config.stt.local_whisper.model }}
AUDIO_STT_WHISPER_VAD_FILTER={{ .openwebui.audio_config.stt.local_whisper.vad_filter }}

{{- else if eq .openwebui.providers.stt_engine "openai" }}
# OpenAI Whisper (via LiteLLM)
AUDIO_STT_OPENAI_API_BASE_URL={{ .openwebui.audio_config.stt.openai.base_url }}
AUDIO_STT_OPENAI_API_KEY={{ .openwebui.audio_config.stt.openai.api_key }}
AUDIO_STT_MODEL={{ .openwebui.audio_config.stt.openai.model }}

{{- else if eq .openwebui.providers.stt_engine "deepgram" }}
# Deepgram
AUDIO_STT_DEEPGRAM_API_KEY={{ .openwebui.audio_config.stt.deepgram.api_key }}

{{- end }}

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🔊 TEXT-TO-SPEECH (Decision 5: Enable? + Decision 25: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if .openwebui.features.text_to_speech }}
# TTS Enabled
AUDIO_TTS_ENGINE={{ .openwebui.providers.tts_engine }}
#AUDIO_TTS_SPLIT_ON={{ .openwebui.audio_config.tts.openai.split_on }}

{{- if eq .openwebui.providers.tts_engine "openai" }}
# OpenAI TTS (via LiteLLM)
AUDIO_TTS_OPENAI_API_BASE_URL={{ .openwebui.audio_config.tts.openai.base_url }}
AUDIO_TTS_OPENAI_API_KEY={{ .openwebui.audio_config.tts.openai.api_key }}
AUDIO_TTS_MODEL={{ .openwebui.audio_config.tts.openai.model }}
AUDIO_TTS_VOICE={{ .openwebui.audio_config.tts.openai.voice }}

{{- else if eq .openwebui.providers.tts_engine "elevenlabs" }}
# ElevenLabs
AUDIO_TTS_ELEVENLABS_API_KEY={{ .openwebui.audio_config.tts.elevenlabs.api_key }}

{{- end }}

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 💻 CODE EXECUTION (Decision 6-7: Enable? + Decision 26-27: Which engine?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if .openwebui.features.code_execution }}
# Code Execution Enabled
ENABLE_CODE_EXECUTION=true
CODE_EXECUTION_ENGINE={{ .openwebui.providers.code_execution_engine }}

{{- if eq .openwebui.providers.code_execution_engine "jupyter" }}
# Jupyter
JUPYTER_URL={{ .openwebui.code_execution_config.jupyter.url }}
JUPYTER_AUTH_TYPE={{ .openwebui.code_execution_config.jupyter.auth }}
JUPYTER_TOKEN={{ .openwebui.code_execution_config.jupyter.token }}
JUPYTER_TIMEOUT={{ .openwebui.code_execution_config.jupyter.timeout }}

{{- end }}

{{- else }}
# Code Execution Disabled
ENABLE_CODE_EXECUTION=false

{{- end }}

{{- if .openwebui.features.code_interpreter }}
# Code Interpreter Enabled
ENABLE_CODE_INTERPRETER=true
CODE_INTERPRETER_ENGINE={{ .openwebui.providers.code_interpreter_engine }}

{{- else }}
# Code Interpreter Disabled
ENABLE_CODE_INTERPRETER=false

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 💾 STORAGE (Decision 28: Which storage provider?)
# ═════════════════════════════════════════════════════════════════════════════

{{- if eq .openwebui.providers.storage_provider "" }}
# Local Storage (default)

{{- else if eq .openwebui.providers.storage_provider "s3" }}
# S3 Storage
STORAGE_PROVIDER=s3
S3_ENDPOINT_URL={{ .openwebui.storage_config.s3.endpoint_url }}
S3_BUCKET_NAME={{ .openwebui.storage_config.s3.bucket_name }}
S3_REGION_NAME={{ .openwebui.storage_config.s3.region_name }}
S3_ACCESS_KEY_ID={{ .openwebui.storage_config.s3.access_key_id }}
S3_SECRET_ACCESS_KEY={{ .openwebui.storage_config.s3.secret_access_key }}

{{- else if eq .openwebui.providers.storage_provider "gcs" }}
# Google Cloud Storage
STORAGE_PROVIDER=gcs
GCS_BUCKET_NAME={{ .openwebui.storage_config.gcs.bucket_name }}
GCS_CREDENTIALS_JSON={{ .openwebui.storage_config.gcs.credentials_json }}

{{- else if eq .openwebui.providers.storage_provider "azure" }}
# Azure Blob Storage
STORAGE_PROVIDER=azure
AZURE_STORAGE_ENDPOINT={{ .openwebui.storage_config.azure.endpoint }}
AZURE_STORAGE_CONTAINER_NAME={{ .openwebui.storage_config.azure.container_name }}
AZURE_STORAGE_KEY={{ .openwebui.storage_config.azure.key }}

{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 REDIS CONFIGURATION (Auto-generated)
# ═════════════════════════════════════════════════════════════════════════════

# Redis URLs (auto-generated from infrastructure.services)
REDIS_URL=redis://{{ .infrastructure.services.openwebui_redis.hostname }}:{{ .infrastructure.services.openwebui_redis.port }}/2
REDIS_KEY_PREFIX=open-webui

# WebSocket Support
{{- if .openwebui.features.websocket_support }}
ENABLE_WEBSOCKET_SUPPORT=true
WEBSOCKET_MANAGER=redis
WEBSOCKET_REDIS_URL=redis://{{ .infrastructure.services.openwebui_redis.hostname }}:{{ .infrastructure.services.openwebui_redis.port }}/3
{{- else }}
ENABLE_WEBSOCKET_SUPPORT=false
{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 🔐 ADDITIONAL FEATURES (Remaining feature flags)
# ═════════════════════════════════════════════════════════════════════════════

# Cloud Integrations
{{- if .openwebui.features.google_drive }}
ENABLE_GOOGLE_DRIVE_INTEGRATION=true
{{- end }}

{{- if .openwebui.features.onedrive }}
ENABLE_ONEDRIVE_INTEGRATION=true
{{- end }}

# AI Enhancements
{{- if .openwebui.features.title_generation }}
ENABLE_TITLE_GENERATION=true
{{- end }}

{{- if .openwebui.features.autocomplete_generation }}
ENABLE_AUTOCOMPLETE_GENERATION=true
{{- end }}

{{- if .openwebui.features.tags_generation }}
ENABLE_TAGS_GENERATION=true
{{- end }}

# Infrastructure
{{- if .openwebui.features.direct_connections }}
ENABLE_MODEL_DIRECT_CONNECTIONS=true
{{- end }}

# Disable features not used in local-only deployment
ENABLE_EVALUATION_ARENA_MODELS=false
ENABLE_COMMUNITY_SHARING=false
ANONYMIZED_TELEMETRY=false

# CORS (allow all for local Tailscale network)
CORS_ALLOW_ORIGIN=*

# ═════════════════════════════════════════════════════════════════════════════
# ✅ SUMMARY
# ═════════════════════════════════════════════════════════════════════════════
# This file was auto-generated from your 29 decision variables in .chezmoi.yaml.tmpl
# 
# Enabled Features:
{{- range $key, $value := .openwebui.features }}
{{- if $value }}
#   ✓ {{ $key }}
{{- end }}
{{- end }}
#
# Selected Providers:
{{- range $key, $value := .openwebui.providers }}
#   → {{ $key }}: {{ $value }}
{{- end }}
#
# To modify this configuration, edit .chezmoi.yaml.tmpl and run: chezmoi apply
# ═════════════════════════════════════════════════════════════════════════════
