{{- if eq .openwebui.providers.vector_db "qdrant" }}
# ═════════════════════════════════════════════════════════════════════════════
# 🗄️  QDRANT - Vector Database for OpenWebUI RAG
# Generated by Chezmoi - DO NOT EDIT MANUALLY
# Conditionally enabled when: openwebui.providers.vector_db == "qdrant"
# ═════════════════════════════════════════════════════════════════════════════

[Unit]
Description={{ .infrastructure.services.qdrant.description }}
After=network-online.target {{ .infrastructure.network.name }}.network.service
Requires={{ .infrastructure.network.name }}.network.service

[Container]
Image={{ .infrastructure.services.qdrant.image }}
AutoUpdate=registry
ContainerName={{ .infrastructure.services.qdrant.container_name }}

# ═════════════════════════════════════════════════════════════════════════════
# 🌐 NETWORK
# ═════════════════════════════════════════════════════════════════════════════
Network={{ .infrastructure.network.name }}.network

# ═════════════════════════════════════════════════════════════════════════════
# 📍 PUBLISHED PORT (for Caddy to access)
# ═════════════════════════════════════════════════════════════════════════════
{{- if .infrastructure.services.qdrant.published_port }}
PublishPort={{ .infrastructure.services.qdrant.bind | default "127.0.0.1" }}:{{ .infrastructure.services.qdrant.published_port }}:{{ .infrastructure.services.qdrant.port }}
{{- end }}

# ═════════════════════════════════════════════════════════════════════════════
# 💾 VOLUME - Persistent storage for vector data
# ═════════════════════════════════════════════════════════════════════════════
Volume={{ .infrastructure.services.qdrant.volume }}:/qdrant/storage:Z

# ═════════════════════════════════════════════════════════════════════════════
# 🌍 ENVIRONMENT - Configuration
# ═════════════════════════════════════════════════════════════════════════════

# Disable telemetry (privacy first)
Environment=QDRANT__TELEMETRY_DISABLED=true

# Logging
Environment=QDRANT__LOG_LEVEL=INFO

# ═════════════════════════════════════════════════════════════════════════════
# 🔧 HEALTH CHECK
# ═════════════════════════════════════════════════════════════════════════════
HealthCmd=timeout 3s bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1
HealthInterval=30s
HealthTimeout=5s
HealthRetries=3
HealthStartPeriod=20s

# ═════════════════════════════════════════════════════════════════════════════
# 🚀 SERVICE
# ═════════════════════════════════════════════════════════════════════════════
[Service]
Slice=llm.slice
TimeoutStartSec=900
Restart=on-failure
RestartSec=10

[Install]
# No WantedBy - dependencies via After/Requires
{{- end }}
